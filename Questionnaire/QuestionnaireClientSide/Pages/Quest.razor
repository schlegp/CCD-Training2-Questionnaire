@page "/questionnaire"

<h1>Counter</h1>

@if (Questions == null)
{
    <Spinner Size=@SpinnerSize.Medium Label="Loading Questions ..." LabelPosition=@SpinnerLabelPosition.Bottom></Spinner>
}
else if (currentScore != null)
{

    <div>@currentScore.CountCorrect out of @currentScore.AnswerStates.Count() questions answered correctly (@currentScore.Percentage%)</div>
    @foreach (var answerState in currentScore.AnswerStates)
    {
        <div style="overflow:auto">
            <h4>@answerState.Question.Text</h4>
            @if (answerState.GivenAnswer == answerState.CorrectAnswer)
            {
                <div><div>Your answer '@answerState.GivenAnswer.Text' is correct</div></div>
            }
            else
            {
                <div><div>Your answer '@answerState.GivenAnswer.Text' is wrong</div><div>Correct answer: '@answerState.CorrectAnswer.Text'</div></div>
            }
        </div>
    }
}
else
{
    @foreach (var question in Questions)
    {
        <QuestionComp Question="question"></QuestionComp>
    }
    <div></div>
    <BlazorFabric.PrimaryButton Text="Submit" OnClick="@Submit" />
}

@code {
    private int currentCount = 0;

    private QuestionHandler qHandler;
    private QuestionnaireEvaluator evaluator;
    private Score currentScore;

    private IEnumerable<Question> Questions;

    protected async override Task OnInitializedAsync()
    {

        qHandler = new QuestionHandler();
        evaluator = new QuestionnaireEvaluator();
        Questions = await qHandler.Provide();
    
    }

    private void Submit()
    {
        currentScore = evaluator.Evaluate(Questions);
    }
}
