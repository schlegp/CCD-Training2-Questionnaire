
        <QuestionComp Question=@currentQuestion></QuestionComp>
        <div class="questPrevButton">
            <BlazorFabric.PrimaryButton Text="Previous" OnClick="@Previous" Disabled="@PreviousDisabled" />
        </div>
        <div class="questNextButton">
            <BlazorFabric.PrimaryButton Text="Next" OnClick="@Next" Disabled="@NextDisabled" />
        </div>

@code {
    [Parameter]
    public IEnumerable<Question> Questions { get; set; }

    private Question currentQuestion;
    private int amountOfSteps = 1;
    private IEnumerator<Question> questionEnumerator;

    public bool PreviousDisabled = true;
    public bool NextDisabled = false;

    protected override void OnInitialized()
    {
        questionEnumerator = Questions.GetEnumerator();
        questionEnumerator.MoveNext();
        currentQuestion = questionEnumerator.Current;
        base.OnInitialized();
    }

    public void Next()
    {
        if (questionEnumerator.MoveNext())
        {
            amountOfSteps++;
            currentQuestion = questionEnumerator.Current;
            NextDisabled = amountOfSteps == Questions.Count();
            PreviousDisabled = amountOfSteps == 1;
        }
    }

    public void Previous()
    {
        questionEnumerator.Reset();
        if(amountOfSteps > 1)
            amountOfSteps--;
        for(int i = 0; i < amountOfSteps; i++)
        {
            questionEnumerator.MoveNext();
        }
        
        currentQuestion = questionEnumerator.Current;
        PreviousDisabled = amountOfSteps == 1;
        NextDisabled = amountOfSteps == Questions.Count();
    }

    
}
